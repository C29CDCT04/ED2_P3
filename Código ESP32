/*
Universidad Del Valle de Guatemala
Facultad de Ingeniería
Departamento de Electrónica, Mecatrónica y Biomédica
Electrónica Digital 2

Carlos Daniel Camacho Tista - 22690
Susan Daniela Guevara Catalán - 22519

Proyecto 3
*/

/********** LIBRERÍAS *********/
#include <Arduino.h>
#include "Wire.h"               // Librería para la comunicación I2C
#include <Adafruit_NeoPixel.h>  // Librería para el neopixel
#include <HardwareSerial.h>     // Permite la transmisión de datos con la STM32

/********** DEFINICIÓN DE PINES ********/
// Pin donde está conectado el sensor I2C

// Configuración del neopixel
#define neopin 12
#define numeroPixel 16

// Configurar el puerto UART en ESP32
HardwareSerial UART_ESP32(2);  // UART2

Adafruit_NeoPixel pixels(numeroPixel, neopin, NEO_GRB + NEO_KHZ800);

/********** PROTOTIPOS DE FUNCIONES ********/

/********** CONFIGURACIÓN INICIAL DE LOS PINES ********/
void setup() {
  // Para monitorear desde el puerto serie (UART0)
  Serial.begin(9600);  
  // Iniciar UART2 a: 115200 baudios, configuración de datos, pin RX, pin TX
  UART_ESP32.begin(115200, SERIAL_8N1, 16, 17); 
  // Definición del Neopixel como salida
  pixels.begin();
  pixels.clear();
  pixels.setBrightness(200);

  Serial.println("Prueba de comunicación UART");
}

void loop() {
  // Revisa si hay datos disponibles en UART2
  if (UART_ESP32.available()) {
    uint8_t incomingByte = UART_ESP32.read();  // Lee un byte desde UART2
    Serial.print("Recibido por UART2: ");
    Serial.println(incomingByte);

    switch(incomingByte){
        case 1:
          for (int i = 0; i < numeroPixel; i++) {
            pixels.setPixelColor(i, pixels.Color(0, 31, 14)); 
          }
          pixels.show();
          Serial.println("LED cambiado a azul");
          delay(1000);
          break;
        case 2:
          for (int i = 0; i < numeroPixel; i++) {
            pixels.setPixelColor(i, pixels.Color(29, 58, 2)); 
          }
          pixels.show();
          Serial.println("LED cambiado a amarillo");
          delay(1000);
          break;
        case 3:
          for (int i = 0; i < numeroPixel; i++) {
            pixels.setPixelColor(i, pixels.Color(0, 50, 14)); 
          }
          pixels.show();
          Serial.println("LED cambiado a verde");
          delay(1000);
          break; 
        default:
          Serial.println("Comando no reconocido.");
          break;
    }
  }
}
